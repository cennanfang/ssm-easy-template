<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="javaFileEncoding" value="UTF-8"/>


        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <!-- caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true -->
            <property name="caseSensitive" value="true"/>
        </plugin>


        <commentGenerator>
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <jdbcConnection driverClass="${driverClass}"
                        connectionURL="${connectionURL}"
                        userId="${userId}"
                        password="${password}">
                </jdbcConnection>

      <!--  <javaModelGenerator targetPackage="${modelPackage}"
                            targetProject="${src_main_java}">
        &lt;!&ndash;    <property name="enableSubPackages" value="false" />
            <property name="trimStrings" value="true" />&ndash;&gt;
        </javaModelGenerator>
        <sqlMapGenerator targetPackage="${sqlMapperPackage}"
                         targetProject="${src_main_resources}">
            <property name="enableSubPackages" value="false" />

        </sqlMapGenerator>
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="${mapperPackage}" targetProject="${src_main_java}">
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>
        <table tableName="%" >
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>-->

        <javaModelGenerator targetPackage="${modelPackage}" targetProject="${src_main_java}"/>

        <sqlMapGenerator targetPackage="${sqlMapperPackage}"  targetProject="${src_main_resources}"/>

        <javaClientGenerator targetPackage="${mapperPackage}" targetProject="${src_main_java}" type="XMLMAPPER" />



        <table tableName="t_message_state"  domainObjectName="MessageState">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_message_type"  domainObjectName="MessageType">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_organization"  domainObjectName="Organization">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_resource"  domainObjectName="Resource">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_role"  domainObjectName="Role">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_role_resource"  domainObjectName="RoleResource">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_user"  domainObjectName="User">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_message"  domainObjectName="Message">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <table tableName="t_user_role"  domainObjectName="UserRole">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>

    </context>    <!-- <table tableName="user" domainObjectName="User" enableCountByExample="false" enableUpdateByExample="false"
                         enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false"> </table>
          <table tableName="user"schema="ome">

               &lt;!&ndash;optional   , only for mybatis3 runtime
                    自动生成的键值（identity,或者序列值）
                  如果指定此元素，MBG将会生成<selectKey>元素，然后将此元素插入到SQLMap的<insert> 元素之中
                  sqlStatement 的语句将会返回新的值
                  如果是一个自增主键的话，你可以使用预定义的语句,或者添加自定义的SQL语句. 预定义的值如下:
                     Cloudscape    This will translate to: VALUESIDENTITY_VAL_LOCAL()
                     DB2:      VALUES IDENTITY_VAL_LOCAL()
                     DB2_MF:       SELECT IDENTITY_VAL_LOCAL() FROMSYSIBM.SYSDUMMY1
                     Derby:        VALUES IDENTITY_VAL_LOCAL()
                     HSQLDB:   CALL IDENTITY()
                     Informix:     select dbinfo('sqlca.sqlerrd1') fromsystables where tabid=1
                     MySql:        SELECT LAST_INSERT_ID()
                     SqlServer:    SELECT SCOPE_IDENTITY()
                     SYBASE:   SELECT @@IDENTITY
                     JDBC:     This will configure MBG to generate codefor MyBatis3 suport of JDBC standard generated keys. This is a databaseindependent method of obtaining the value from identity columns.
                     identity: 自增主键  If true, then the column is flagged as anidentity column and the generated <selectKey> element will be placedafter the insert (for an identity column). If false, then the generated <selectKey>will be placed before the insert (typically for a sequence).

               &ndash;&gt;
               <generatedKeycolumn="" sqlStatement="" identity=""type=""/>


               &lt;!&ndash;optional.
                       列的命名规则：
                       MBG使用<columnRenamingRule> 元素在计算列名的对应名称之前，先对列名进行重命名，
                       作用：一般需要对BUSI_CLIENT_NO前的BUSI_进行过滤
                       支持正在表达式
                        searchString 表示要被换掉的字符串
                        replaceString 则是要换成的字符串，默认情况下为空字符串，可选
               &ndash;&gt;
               <columnRenamingRulesearchString="" replaceString=""/>



               &lt;!&ndash;optional.告诉 MBG 忽略某一列
                       column，需要忽略的列
                      delimitedColumnName:true ,匹配column的值和数据库列的名称大小写完全匹配，false 忽略大小写匹配
                       是否限定表的列名，即固定表列在Model中的名称
               &ndash;&gt;
               <ignoreColumncolumn="delete" delimitedColumnName="true" />


              &lt;!&ndash;optional.覆盖MBG对Model 的生成规则
                    column: 数据库的列名
                    javaType: 对应的Java数据类型的完全限定名
                    在必要的时候可以覆盖由JavaTypeResolver计算得到的java数据类型. Forsome databases, this is necessary to handle "odd" database types(e.g. MySql's unsigned bigint type should be mapped to java.lang.Object).
                    jdbcType:该列的JDBC数据类型(INTEGER,DECIMAL, NUMERIC, VARCHAR, etc.)，该列可以覆盖由JavaTypeResolver计算得到的Jdbc类型，对某些数据库而言，对于处理特定的JDBC 驱动癖好很有必要(e.g. DB2's LONGVARCHAR type should be mapped to VARCHAR foriBATIS).
                    typeHandler:

               &ndash;&gt;
               <columnOverridecolumn="" javaType=""   jdbcType="" typeHandler=""  delimitedColumnName="" />

          </table>-->
</generatorConfiguration>